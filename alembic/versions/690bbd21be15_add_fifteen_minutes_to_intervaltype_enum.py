"""Add fifteen_minutes to intervaltype Enum

Revision ID: 690bbd21be15
Revises: aa8549fa6e15
Create Date: 2025-05-06 20:56:03.396038

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '690bbd21be15'
down_revision: Union[str, None] = 'aa8549fa6e15'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stock_data')
    op.drop_table('analysis_results')
    op.alter_column('time_intervals', 'interval_type',
               existing_type=postgresql.INTERVAL(),
               type_=sa.Enum('one_minute', 'five_minutes', 'fifteen_minutes', name='intervaltype'),
               existing_nullable=False,
               existing_server_default=sa.text("'one_minute'::intervaltype"))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('time_intervals', 'interval_type',
               existing_type=sa.Enum('one_minute', 'five_minutes', 'fifteen_minutes', name='intervaltype'),
               type_=postgresql.INTERVAL(),
               existing_nullable=False,
               existing_server_default=sa.text("'one_minute'::intervaltype"))
    op.create_table('analysis_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('strategy_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('parameters', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('performance_metrics', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='analysis_results_pkey')
    )
    op.create_table('stock_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('open', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('high', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('low', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('close', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('volume', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ma_fast', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ma_slow', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('rsi', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('signal', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('confidence', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='stock_data_pkey')
    )
    # ### end Alembic commands ###
